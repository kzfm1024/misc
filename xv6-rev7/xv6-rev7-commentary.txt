# basic headers
[types.h]
uint, ushort, uchar, pde_t の typedef 宣言

[param.h]
最大プロセス数、最大オープンファイル数などの定義

[memlayout.h]
メモリレイアウトのアドレス定義
V2P(), P2V(), V2P_WO(), P2V_WO() マクロの定義

[defs.h]
カーネルで使用される関数の宣言

[x86.h]
x86 命令のインライン関数の定義

[asm.h]
x86 セグメントを作成するためにアセンブラマクロ

[mmu.h]
x86 memory management unit (MMU) 関連の定義

[elf.h]
ELF フォーマットの定義


# entering xv6
[entry.S]
main() を呼び出す

[entryother.S]
??

[main.c]
main() 関数

# locks
[spinlock.h]
スピンロック構造体 spinlock 定義

[spinlock.c]
スピンロック関数

# processes
[vm.c]

[proc.h]

[proc.c]

[swtch.S]

[kalloc.c]


# file system
[buf.h]
ブロックデバイスのバッファ

[fcntl.h]
O_RDONLY などの open() の引数定義

[stat.h]
stat 構造体の定義

[fs.h]
スーパーブロックの定義
dinode 構造体  の定義(ディスク上の inode)
ディレクトリエントリ dirent 構造体 の定義

[file.h]
file 構造体の定義
メモリ上の inode 構造体の定義
メジャー番号からデバイスの読み書き関数のマッピングする構造体 devsw の定義

[ide.c]
IDE 関数 idewait(), ideinit(), idestart(), ideintr(), iderw()

[bio.c]
デバイスブロックバッファ binit(), bget(), bwrite(), brelse()
- binit()
bcache 構造体の spinlock 初期化
bcache 構造体のデバイスブロックバッファのリスト初期化



[log.c]
ロギング関数

[fs.c]
ファイルシステム本体
- iinit()
icache 構造体の spinlock 初期化　

[file.c]
ファイルディスクリプタ
- fileinit()
ftable 構造体の spinlock 初期化

[sysfile.c]
ファイルシステムのシステムコール

[exec.c]
exec() 関数

# pipes
[pipe.c]
パイプ関数

---------------------------------------------------------------------------
[buf.h]
buf 構造体
prev, next で LRU (Least Recently Used) の双方向リストを構成
先頭に最近使用されたブロックはリストに先頭に連結される。

### qnext は ide.c で使用されている。ディスク読み込みに使われているようだ ###

[binit.c]
binit (4038)
buf 構造体の双方向リストを初期化する。
buf 構造体の個数は 10 個。NBUF (0155) は param.h で定義されている。


bget (4066)
dev, sector のバッファキャッシュを探す。
存在しない場合は空きブロックを確保する。
いづれの場合も flags には B_BUSY が設定される。
4074:
すでにキャッシュされたブロックを探す場合はリストの先頭から走査する。
4075:
dev, sector が一致するブロックが見つかった。
4076:
B_BUSY フラグが立っていなければ B_BUSY フラグを立ててブロックを返す。
4081:
B_BUSY フラグが立っている場合は sleep する。
復帰したら最初から検索をやり直す。
4087:
dev, sector が一致するブロックが見つからなかった場合は空きブロックを探す。
LRU (Least Recently Used) ブロックを見つけるためにリストの末尾から走査する。
4088:
B_BUSY, B_DIRTY フラグが立っていないブロックが見つかったら dev, sector, 
B_BUSY フラグをセットして空きブロックを返す。

bread (4102)
4106:
bget を実行してブロックを取得
4107:
B_VALID フラグが立っていない場合は iderw 実行してデータを読み込む。
B_VALID フラグが立っている場合にはブロックに dev, sector のデータが
すでにキャッシュされている。

bwrite (4114)
4116:
B_BUSY フラグが立っているかをチェックする。
4118:
B_DIRTY フラグを立てて iderw で書き込みが行われるようにする。

brelse (4125)
4132-4137:
ブロックをリストの先頭に連結する。
4139:
B_BUSY フラグをクリアする。
4140:
wakeup を実行してブロックを待っているプロセスを起こす。

---------------------------------------------------------------------------




